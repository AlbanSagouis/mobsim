% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sim_Community.R
\name{Sim.Thomas.Coords}
\alias{Sim.Thomas.Coords}
\title{Simulate community with log-normal SAD and Thomas process clustering}
\usage{
Sim.Thomas.Coords(abund.vec, sigma = 0.02, xext = c(0, 1), yext = c(0, 1),
  points.cluster = NULL)
}
\arguments{
\item{abund.vec}{integer vector - species abundances}

\item{sigma}{numeric vector of length = 1 or length = 2. Standard deviation of
random displacement (along each coordinate axis) of a point from
its cluster centre. Therefore sigma correlates with cluster radius.
When length(sigma) == 1 all species have the same cluster radius.
When length(sigma) == 2 a linear relationship between species-specific sigma values
and log(relative abundance) is simulated. Thereby sigma[1] is the cluster parameter
for the least abundant species and sigma[2] the cluster parameter for the most
abundant species.
When length(sigma) == 1 and sigma is more than twice as large as the largest
plot dimension, than a random Poisson distribution is simulated, which is more
efficient than a Thomas cluster process.}

\item{xext}{numeric with length 2 - size of the simulated area in x-direction}

\item{yext}{numeric with length 2 - size of the simulated area in y-direction}

\item{points.cluster}{scalar integer - numbers of individuals per cluster.
If it is defined as sqrt(species abundance), i.e. there will be on average the number
of clusters will equal the number of individuals per cluster.}
}
\value{
A dataframe with three columns
\enumerate{
   \item X : x-coordinate of individual
   \item Y : y-coordinate of individual
   \item SpecID : factor with species identity label (from 1 to number of species)
}
}
\description{
Simulate community with log-normal SAD and Thomas process clustering
}
\details{
To generate a Thomas cluster process of a single species this function uses a C++
         re-implementation if the function \code{rThomas()} in the package \code{spatstat}.
}
\author{
Felix May
}
\seealso{
\code{spatstat::rThomas()}
}

